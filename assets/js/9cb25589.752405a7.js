"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1404],{4148:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"builds/processors","title":"processors","description":"Processor workings","source":"@site/docs/builds/processors.md","sourceDirName":"builds","slug":"/builds/processors","permalink":"/wotr-docs/docs/builds/processors","draft":false,"unlisted":false,"editUrl":"https://github.com/Wanderers-Of-The-Rift/wotr-docs/edit/main/website/docs/builds/processors.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"standards","permalink":"/wotr-docs/docs/builds/standards"},"next":{"title":"Build Tutorial","permalink":"/wotr-docs/docs/builds/tutorial"}}');var t=o(4848),n=o(8453);const a={},i=void 0,c={},d=[{value:"Processor workings",id:"processor-workings",level:2},{value:"Fixed and Extra Processor blocks",id:"fixed-and-extra-processor-blocks",level:2},{value:"More Processor capabilities",id:"more-processor-capabilities",level:2}];function l(e){const s={br:"br",code:"code",h2:"h2",p:"p",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"processor-workings",children:"Processor workings"}),"\n",(0,t.jsxs)(s.p,{children:["The processors inputs a theme and a room, and turns the processor blocks in that room into the according blocks that the theme provides.",(0,t.jsx)(s.br,{}),"\n","The room is made from different processor blocks, that dictate the layout.",(0,t.jsx)(s.br,{}),"\n","The theme is a sort of dictionary, translating every processor block into several themed blocks, with a given weighting.",(0,t.jsx)(s.br,{}),"\n","For example: for cave theme, ",(0,t.jsx)(s.code,{children:"processor_block_1"})," turns into 80% stone, 20% andesite. For wood theme, ",(0,t.jsx)(s.code,{children:"processor_block_1"})," turns into 60% oak planks, 20% birch planks, 20% dark oak planks."]}),"\n",(0,t.jsx)(s.p,{children:"Themes are WIP"}),"\n",(0,t.jsx)(s.h2,{id:"fixed-and-extra-processor-blocks",children:"Fixed and Extra Processor blocks"}),"\n",(0,t.jsxs)(s.p,{children:["Processor blocks 1 through 7 are fixed, every theme can replace them.",(0,t.jsx)(s.br,{}),"\n","Processor blocks 8 through 14 are extra, not fixed, and a seperate processor has to be provided, specific to that room. That processor runs along additionally to the standard processor, so both pools can be used.",(0,t.jsx)(s.br,{}),"\n",'Additional processors can be re-used, so multiple rooms can use the same additional processor. This means that multiple rooms can have a demand for themed glass, for example, even though themed glass is not a fixed processor. The required additional processor has to be indicated in the "Extra processor blocks used" forum.']}),"\n",(0,t.jsx)(s.p,{children:"Correct notation is WIP"}),"\n",(0,t.jsx)(s.h2,{id:"more-processor-capabilities",children:"More Processor capabilities"}),"\n",(0,t.jsxs)(s.p,{children:["There are processors that can place flowers and mushrooms on the floor, cobweb and vines against the wall, and fill flower pots with a long list of flowers, and alike. They can run over a room on request, or be theme dependent. This means that they dont have to be placed by the builder.",(0,t.jsx)(s.br,{}),"\n","Sometimes, it may be useful to pick an extra processor block dedicated to eg. leaves, to be sure leaves are placed in a tree-top shape.",(0,t.jsx)(s.br,{}),"\n","When choosing a leave block, if a oak leaves was chosen, the theme will potentially change these to different themed leaves to match the theme."]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>a,x:()=>i});var r=o(6540);const t={},n=r.createContext(t);function a(e){const s=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);